#include "Geometry/CaloTopology/interface/CaloTopology.h"
#include "Geometry/CaloEventSetup/interface/CaloTopologyRecord.h"


  edm::ESHandle<CaloGeometry> caloGeoH;
  iSetup.get<CaloGeometryRecord>().get(caloGeoH);
  const CaloGeometry            * fullGeometry   = caloGeoH.product();

  // topology (from Photon producer)
  edm::ESHandle<CaloTopology> caloTopoH;
  iSetup.get<CaloTopologyRecord>().get(caloTopoH);
  const CaloTopology * topology = caloTopoH.product();


      const reco::SuperClusterRef& phsc = phiter->superCluster().isNonnull() ? phiter->superCluster() : phiter->parentSuperCluster();


      const DetId seedDetId = phsc->seed()->seed(); //seed detid
      const bool  isEB = (seedDetId.subdetId() == EcalBarrel); //which subdet
      const EcalRecHitCollection * recHits = isEB ? clustertools->getEcalEBRecHitCollection() : clustertools->getEcalEERecHitCollection();
      
      //      const std::vector<float> locov = noZS::EcalClusterTools::localCovariances( (*phsc->seed()), &(*recHits), &(*topology) );
      //      const std::vector<float> cov   = noZS::EcalClusterTools::covariances( (*phsc->seed()), &(*recHits), &(*topology), fullGeometry );



